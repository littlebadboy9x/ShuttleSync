package com.example.shuttlesync.controller.customer;

import com.example.shuttlesync.service.VoucherEmailService;
import com.example.shuttlesync.service.SimpleEmailTestService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@RequestMapping("/customer/test-email")
@RequiredArgsConstructor
@Slf4j
public class TestEmailController {

    private final VoucherEmailService voucherEmailService;
    private final SimpleEmailTestService simpleEmailTestService;

    @PostMapping("/voucher")
    public ResponseEntity<?> testVoucherEmail(@RequestParam String email) {
        try {
            log.info("üß™ [PUBLIC] Test g·ª≠i email voucher ƒë·∫øn: {}", email);
            
            boolean sent = voucherEmailService.sendTestVoucherEmail(email);
            
            if (sent) {
                return ResponseEntity.ok(Map.of(
                    "success", true,
                    "message", "‚úÖ ƒê√£ g·ª≠i email test voucher th√†nh c√¥ng ƒë·∫øn: " + email
                ));
            } else {
                return ResponseEntity.badRequest().body(Map.of(
                    "success", false,
                    "message", "Kh√¥ng th·ªÉ g·ª≠i email test voucher"
                ));
            }
            
        } catch (Exception e) {
            log.error("L·ªói khi test email voucher: {}", e.getMessage());
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói server: " + e.getMessage(),
                "error", e.getClass().getSimpleName()
            ));
        }
    }

    @PostMapping("/process-pending")
    public ResponseEntity<?> processPendingEmails() {
        try {
            log.info("üîÑ [PUBLIC] X·ª≠ l√Ω email voucher ch·ªù g·ª≠i");
            
            voucherEmailService.processVoucherEmails();
            
            return ResponseEntity.ok(Map.of(
                "success", true,
                "message", "‚úÖ ƒê√£ x·ª≠ l√Ω email voucher ch·ªù g·ª≠i"
            ));
            
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi x·ª≠ l√Ω email voucher: {}", e.getMessage());
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói server: " + e.getMessage()
            ));
        }
    }

    @PostMapping("/simple")
    public ResponseEntity<?> sendSimpleEmail(@RequestParam String email) {
        try {
            log.info("üß™ [PUBLIC] Test g·ª≠i email ƒë∆°n gi·∫£n ƒë·∫øn: {}", email);
            
            boolean sent = simpleEmailTestService.sendSimpleTestEmail(email);
            
            if (sent) {
                return ResponseEntity.ok(Map.of(
                    "success", true,
                    "message", "‚úÖ ƒê√£ g·ª≠i email ƒë∆°n gi·∫£n th√†nh c√¥ng ƒë·∫øn: " + email
                ));
            } else {
                return ResponseEntity.badRequest().body(Map.of(
                    "success", false,
                    "message", "‚ùå Kh√¥ng th·ªÉ g·ª≠i email ƒë∆°n gi·∫£n"
                ));
            }
            
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi g·ª≠i email ƒë∆°n gi·∫£n: {}", e.getMessage());
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói server: " + e.getMessage(),
                "error", e.getClass().getSimpleName()
            ));
        }
    }

    @GetMapping("/config")
    public ResponseEntity<?> checkEmailConfig() {
        try {
            String config = simpleEmailTestService.checkEmailConfig();
            return ResponseEntity.ok(Map.of(
                "success", true,
                "config", config
            ));
        } catch (Exception e) {
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói: " + e.getMessage()
            ));
        }
    }
} 