package com.example.shuttlesync.controller.customer;

import com.example.shuttlesync.service.VoucherAutoGiftService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@RequestMapping("/customer/test-auto-gift")
@RequiredArgsConstructor
@Slf4j
public class TestAutoGiftController {

    private final VoucherAutoGiftService voucherAutoGiftService;

    /**
     * Test ch·∫°y auto-gift th·ªß c√¥ng cho t·∫•t c·∫£ kh√°ch h√†ng
     */
    @PostMapping("/run-all")
    public ResponseEntity<?> runAutoGiftForAll() {
        try {
            log.info("üß™ [TEST] Ch·∫°y auto-gift th·ªß c√¥ng cho t·∫•t c·∫£ kh√°ch h√†ng");
            
            voucherAutoGiftService.autoGiftVouchersForAllCustomers();
            
            return ResponseEntity.ok(Map.of(
                "success", true,
                "message", "‚úÖ ƒê√£ ch·∫°y auto-gift cho t·∫•t c·∫£ kh√°ch h√†ng"
            ));
            
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi ch·∫°y auto-gift: {}", e.getMessage());
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói server: " + e.getMessage()
            ));
        }
    }

    /**
     * Test ch·∫°y auto-gift cho m·ªôt kh√°ch h√†ng c·ª• th·ªÉ
     */
    @PostMapping("/run-customer")
    public ResponseEntity<?> runAutoGiftForCustomer(@RequestParam String email) {
        try {
            log.info("üß™ [TEST] Ch·∫°y auto-gift th·ªß c√¥ng cho kh√°ch h√†ng: {}", email);
            
            int vouchersGifted = voucherAutoGiftService.giftVouchersForCustomer(email);
            
            return ResponseEntity.ok(Map.of(
                "success", true,
                "message", String.format("‚úÖ ƒê√£ t·∫∑ng %d voucher cho %s", vouchersGifted, email),
                "vouchersGifted", vouchersGifted
            ));
            
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi ch·∫°y auto-gift cho kh√°ch h√†ng: {}", e.getMessage());
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói server: " + e.getMessage()
            ));
        }
    }

    /**
     * Ki·ªÉm tra tr·∫°ng th√°i scheduled job
     */
    @GetMapping("/status")
    public ResponseEntity<?> getAutoGiftStatus() {
        try {
            return ResponseEntity.ok(Map.of(
                "success", true,
                "message", "Auto-gift service ƒëang ho·∫°t ƒë·ªông",
                "scheduledRate", "M·ªói 1 ph√∫t",
                "lastCheck", new java.util.Date()
            ));
            
        } catch (Exception e) {
            return ResponseEntity.internalServerError().body(Map.of(
                "success", false,
                "message", "L·ªói: " + e.getMessage()
            ));
        }
    }
} 